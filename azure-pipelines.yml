# Build dexed with JUCE buidls

trigger:
  - main

pr:
  - main

jobs:

  - job: Test
    condition: eq(variables['Build.Reason'], 'PullRequest')
    strategy:
      matrix:
        mac:
          imageName: 'macos-10.15'
          isMac: True
        win:
          imageName: 'windows-2019'
          isWindows: True
        lin:
          imageName: 'ubuntu-20.04'
          isLinux: True

    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        fetchDepth: 1

      - bash: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          ./build/test-binary/sst-filters-tests
        displayName: Run tests with cmake

  - job: Examples
    condition: eq(variables['Build.Reason'], 'PullRequest')
    strategy:
      matrix:
        mac:
          imageName: 'macos-10.15'
          isMac: True
        win:
          imageName: 'windows-2019'
          isWindows: True
        lin:
          imageName: 'ubuntu-20.04'
          isLinux: True

    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        fetchDepth: 1

      - bash: |
          set -e

          sudo apt-get update
          sudo apt-get install -y \
              devscripts \
              libxcb-cursor-dev \
              libxcb-keysyms1-dev \
              libxcb-util-dev \
              libxkbcommon-dev \
              libxkbcommon-x11-dev \
              ninja-build \
              xcb
          
          # These are the JUCE deps
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.0
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y alsa
          sudo apt-get install -y alsa-tools
          sudo apt-get install -y libasound2-dev
          sudo apt-get install -y libjack-dev
          sudo apt-get install -y libfreetype6-dev
          sudo apt-get install -y libxinerama-dev
          sudo apt-get install -y libxcb-xinerama0
          sudo apt-get install -y libxinerama1
          sudo apt-get install -y x11proto-xinerama-dev
          sudo apt-get install -y libxrandr-dev
          sudo apt-get install -y libgl1-mesa-dev
          sudo apt-get install -y libxcursor-dev
          sudo apt-get install -y libxcursor1
          sudo apt-get install -y libxcb-cursor-dev
          sudo apt-get install -y libxcb-cursor0
          sudo apt-get install -y --fix-missing

        condition: variables.isLinux
        displayName: Install Linux dependencies

      - bash: cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DSST_FILTERS_BUILD_EXAMPLES=ON
        displayName: Run cmake configure

      - bash: cmake --build build --config Release --target filter_plot_tool
        displayName: Build filter_plot_tool

      - bash: cmake --build build --config Release --target FiltersPlugin_VST3
        displayName: Build filters_example_plugin


  - job: MacARM
    condition: eq(variables['Build.Reason'], 'PullRequest')
    pool:
      vmImage: 'macos-10.15'

    steps:
      - checkout: self
        fetchDepth: 1

      - bash: cmake -Bbuild -GXcode -DSST_FILTERS_BUILD_TESTS=ON -D\"CMAKE_OSX_ARCHITECTURES=arm64\"
        displayName: Run cmake configure

      - bash: cmake --build build --config Debug --parallel --target sst-filters-tests | xcpretty
        displayName: Build tests

  - job: Doxygenate
    condition: not(eq(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - checkout: self
      fetchDepth: 1
  
    - task: DownloadSecureFile@1
      inputs:
        secureFile: sru-token.txt
  
    - bash: |
         sudo apt-get install doxygen graphviz
         doxygen doxygen/Doxyfile
  
         HASH=`git rev-parse --short HEAD`
         TOK=`cat $AGENT_TEMPDIRECTORY/sru-token.txt`
         git clone https://surge-rackupdater:${TOK}@github.com/surge-synthesizer/sst-docs
         git config --global user.email "surge-rackupdater@dev.null"
         git config --global user.name "surge-rackupdater"
  
         mkdir -p sst-docs/docs/sst-filters
         pushd doxy-out
         tar cf - . | (cd ../sst-docs/docs/sst-filters && tar xf -)
         popd
         pushd sst-docs
         git add docs
         git status
         git commit -m "Update sst-filters docs at ${HASH}"
         git push origin main

      displayName: "Make Doxygen and Commit it"
